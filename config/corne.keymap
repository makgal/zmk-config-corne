/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <16 19>;
            layers = <0>;
        };

        win_left {
            bindings = <&kp LEFT_WIN>;
            key-positions = <16 15>;
        };

        win_right {
            bindings = <&kp RIGHT_WIN>;
            key-positions = <19 20>;
        };

        go_to_base_left {
            bindings = <&to 0>;
            key-positions = <4 3>;
            layers = <5 6 7 8 9>;
        };

        go_to_base_right {
            bindings = <&to 0>;
            key-positions = <8 7>;
            layers = <1 2 4>;
        };

        constant_nav {
            bindings = <&to 1>;
            key-positions = <37 4>;
            layers = <0>;
        };

        constant_mouse {
            bindings = <&to 2>;
            key-positions = <38 4>;
            layers = <0>;
        };

        constant_media {
            bindings = <&to 4>;
            key-positions = <4 36>;
            layers = <0>;
        };

        constant_num {
            bindings = <&to 5>;
            key-positions = <7 40>;
            layers = <0>;
        };

        constant_sym {
            bindings = <&to 6>;
            key-positions = <7 39>;
            layers = <0>;
        };

        constant_fun {
            bindings = <&to 7>;
            key-positions = <41 7>;
        };

        go_to_num {
            bindings = <&to 5>;
            key-positions = <37 28>;
            layers = <0>;
        };

        go_to_sym {
            bindings = <&to 6>;
            key-positions = <38 28>;
            layers = <0>;
        };

        go_to_fun {
            bindings = <&to 7>;
            key-positions = <36 28>;
            layers = <0>;
        };

        go_to_nav {
            bindings = <&to 1>;
            key-positions = <31 40>;
            layers = <0>;
        };

        go_to_mouse {
            bindings = <&to 2>;
            key-positions = <31 39>;
            layers = <0>;
        };

        go_to_media {
            bindings = <&to 2>;
            key-positions = <31 41>;
            layers = <0>;
        };

        go_to_left_nav {
            bindings = <&to 8>;
            key-positions = <17 37>;
            layers = <0>;
        };

        go_to_left_mouse {
            bindings = <&to 9>;
            key-positions = <17 38>;
            layers = <0>;
        };

        command_grave {
            bindings = <&kp LG(GRAVE)>;
            key-positions = <4 3>;
            layers = <0>;
        };
    };

    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        hmm: hmm {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        num_period_comma: num_period_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "NUM_PERIOD_COMMA";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COMMA>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE  &kp Q            &kp W         &kp E            &kp R              &kp T         &kp Y         &kp U               &kp I             &kp O         &kp P                &kp LEFT_BRACKET
&none      &hrm LEFT_ALT A  &hrm LCTRL S  &hrm LEFT_WIN D  &hrm LEFT_SHIFT F  &kp G         &kp H         &hrm RIGHT_SHIFT J  &hrm RIGHT_WIN K  &hrm RCTRL L  &hrm RIGHT_ALT SEMI  &kp SQT
&none      &hmm 3 Z         &kp X         &kp C            &kp V              &kp B         &kp N         &kp M               &kp COMMA         &kp DOT       &hmm 3 SLASH         &kp RIGHT_BRACKET
                                          &hmm 4 ESCAPE    &hmm 1 SPACE       &hmm 2 TAB    &hmm 6 ENTER  &hmm 5 BACKSPACE    &hmm 7 DELETE
            >;
        };

        Nav {
            bindings = <
&none  &none         &none      &none         &none           &none    &kp LG(Y)  &kp LG(V)      &kp LG(C)    &kp LG(X)  &kp LG(Z)     &kp LG(A)
&none  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_SHIFT  &none    &kp LEFT   &kp DOWN       &kp UP       &kp RIGHT  &kp CAPSLOCK  &none
&none  &none         &none      &none         &none           &none    &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp INSERT    &none
                                &none         &none           &none    &kp ENTER  &kp BACKSPACE  &kp DELETE
            >;
        };

        Mouse {
            bindings = <
&none  &none         &none      &none         &none           &none    &kp LG(Y)       &kp LG(V)       &kp LG(C)     &kp LG(X)        &kp LG(Z)  &kp LG(A)
&none  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_SHIFT  &none    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp MB4   &none
&none  &none         &none      &none         &none           &none    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &mkp MB5   &none
                                &none         &none           &none    &mkp RCLK       &mkp LCLK       &mkp MCLK
            >;
        };

        Button {
            bindings = <
&none  &kp LG(Z)     &kp LG(X)  &kp LG(C)     &kp LG(V)       &kp LG(Y)    &kp LG(Y)  &kp LG(V)        &kp LG(C)      &kp LG(X)    &kp LG(Z)      &none
&none  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_SHIFT  &kp LG(A)    &kp LG(A)  &kp RIGHT_SHIFT  &kp RIGHT_WIN  &kp RCTRL    &kp RIGHT_ALT  &none
&none  &none         &kp HOME   &kp PAGE_UP   &kp PAGE_DOWN   &kp END      &none      &kp HOME         &kp PAGE_DOWN  &kp PAGE_UP  &kp END        &none
                                &kp DELETE    &kp BACKSPACE   &kp ENTER    &kp ENTER  &kp BACKSPACE    &kp DELETE
            >;
        };

        Media {
            bindings = <
&none  &none         &none      &none         &none           &none    &none         &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none         &none       &none
&none  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_SHIFT  &none    &kt C_PREV    &kp C_VOL_DN          &kp C_VOL_UP          &kp C_NEXT    &none       &none
&none  &none         &none      &none         &none           &none    &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3  &bt BT_CLR  &none
                                &none         &none           &none    &kp C_STOP    &kp C_PLAY_PAUSE      &kp C_MUTE
            >;
        };

        Num {
            bindings = <
&none      &kp LBKT   &kp N7        &kp N8             &kp N9  &kp RBKT     &none          &none            &none          &none      &none               &none
&kp SLASH  &kp SQT    &kp N4        &kp N5             &kp N6  &kp EQUAL    &kp BACKSPACE  &kp RIGHT_SHIFT  &kp RIGHT_WIN  &kp RCTRL  &hrm RIGHT_ALT DEL  &none
&none      &kp GRAVE  &kp NUMBER_1  &kp N2             &kp N3  &kp BSLH     &none          &kp SPACE        &kp ENTER      &none      &none               &none
                                    &num_period_comma  &kp N0  &kp MINUS    &none          &none            &none
            >;
        };

        Sym {
            bindings = <
&none         &kp LEFT_BRACE     &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none          &none            &none          &none      &none                  &none
&kp QUESTION  &kp DOUBLE_QUOTES  &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &kp BACKSPACE  &kp RIGHT_SHIFT  &kp RIGHT_WIN  &kp RCTRL  &hrm RIGHT_ALT DELETE  &none
&none         &kp TILDE          &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &none          &kp SPACE        &kp ENTER      &none      &none                  &none
                                                  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &none          &none            &none
            >;
        };

        Fun {
            bindings = <
&kp F15  &kp F12  &kp F7  &kp F8     &kp F9     &kp PRINTSCREEN    &none  &none            &none          &none      &none          &none
&kp F14  &kp F11  &kp F4  &kp F5     &kp F6     &kp SCROLLLOCK     &none  &kp RIGHT_SHIFT  &kp RIGHT_WIN  &kp RCTRL  &kp RIGHT_ALT  &none
&kp F13  &kp F10  &kp F1  &kp F2     &kp F3     &kp PAUSE_BREAK    &none  &none            &none          &none      &none          &none
                          &kp K_APP  &kp SPACE  &kp ENTER          &none  &none            &none
            >;
        };

        Nav_left {
            bindings = <
&kp LG(A)  &kp LG(Z)  &kp LG(X)       &kp LG(C)     &kp LG(V)       &kp LG(Y)    &none  &none  &none  &none  &none  &none
&none      &kp CAPS   &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT    &none  &none  &none  &none  &none  &none
&none      &kp INS    &kp HOME        &kp PAGE_UP   &kp PAGE_DOWN   &kp END      &none  &none  &none  &none  &none  &none
                                      &kp DEL       &kp BACKSPACE   &kp ENTER    &none  &none  &none
            >;
        };

        Mouse_left {
            bindings = <
&kp LG(A)  &kp LG(Z)  &kp LG(X)       &kp LG(C)     &kp LG(V)       &kp LG(Y)          &none  &none  &none  &none  &none  &none
&none      &mkp MB4   &mmv MOVE_LEFT  &mmv MOVE_UP  &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &none  &none  &none  &none  &none  &none
&none      &mkp MB5   &msc SCRL_LEFT  &msc SCRL_UP  &msc SCRL_DOWN  &msc SCRL_RIGHT    &none  &none  &none  &none  &none  &none
                                      &mkp MCLK     &mkp LCLK       &mkp RCLK          &none  &none  &none
            >;
        };
    };
};

&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <1000>;
    acceleration-exponent = <1>;
};
