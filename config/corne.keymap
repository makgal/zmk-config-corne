/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 900  // default: 600

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <16 19>;
            layers = <0>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        hmm: hmm {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };
    };

    macros {
        nav: nav {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_pause_for_release>, <&to 1>;

            label = "NAV";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE   &kp Q            &kp W            &kp E          &kp R              &kp T         &kp Y         &kp U              &kp I          &kp O            &kp P               &kp LEFT_BRACKET
&kp ESCAPE  &hrm LEFT_WIN A  &hrm LEFT_ALT S  &hrm LCTRL D   &hrm LEFT_SHIFT F  &kp G         &kp H         &hrm LEFT_SHIFT J  &hrm LCTRL K   &hrm LEFT_ALT L  &hrm LEFT_WIN SEMI  &kp SQT
&kp TAB     &hmm 3 Z         &kp X            &kp C          &kp V              &kp B         &kp N         &kp M              &kp COMMA      &kp DOT          &hmm 3 SLASH        &kp RIGHT_BRACKET
                                              &hmm 4 ESCAPE  &hmm 1 SPACE       &hmm 2 TAB    &hmm 6 ENTER  &hmm 5 BACKSPACE   &hmm 7 DELETE
            >;
        };

        Nav {
            bindings = <
&none  &none         &none         &none      &nav            &none    &kp LC(Y)  &kp LC(V)      &kp LC(C)    &kp LC(X)  &kp LC(Z)     &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp LEFT   &kp DOWN       &kp UP       &kp RIGHT  &kp CAPSLOCK  &none
&none  &none         &none         &none      &to 0           &none    &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp INSERT    &none
                                   &none      &none           &none    &kp ENTER  &kp BACKSPACE  &kp DELETE
            >;
        };

        Mouse {
            bindings = <
&none  &none         &none         &none      &none           &none    &kp LC(Y)       &kp LC(V)       &kp LC(C)     &kp LC(X)        &kp LC(Z)  &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp MB4   &none
&none  &none         &none         &none      &none           &none    &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &mkp MB5   &none
                                   &none      &none           &none    &mkp RCLK       &mkp LCLK       &mkp MCLK
            >;
        };

        Button {
            bindings = <
&none  &kp LC(Z)     &kp LC(X)     &kp LC(C)  &kp LC(V)       &kp LC(Y)    &kp LC(Y)  &kp LC(V)       &kp LC(C)  &kp LC(X)     &kp LC(Z)     &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none        &none      &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &none
&none  &kp LC(Z)     &kp LC(X)     &kp LC(C)  &kp LC(V)       &kp LC(Y)    &kp LC(Y)  &kp LC(V)       &kp LC(C)  &kp LC(X)     &kp LC(Z)     &none
                                   &mkp MCLK  &mkp LCLK       &mkp RCLK    &mkp RCLK  &mkp LCLK       &mkp MCLK
            >;
        };

        Media {
            bindings = <
&none  &none         &none         &none      &none           &none    &none         &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none         &none       &none
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kt C_PREV    &kp C_VOL_DN          &kp C_VOL_UP          &kp C_NEXT    &none       &none
&none  &none         &none         &none      &none           &none    &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2          &bt BT_SEL 3  &bt BT_CLR  &none
                                   &none      &none           &none    &kp C_STOP    &kp C_PLAY_PAUSE      &kp C_MUTE
            >;
        };

        Num {
            bindings = <
&kp BACKSPACE  &kp LBKT   &kp N7        &kp N8   &kp N9  &kp RBKT     &none  &none      &none      &none     &none     &none
&kp COMMA      &kp SEMI   &kp N4        &kp N5   &kp N6  &kp EQUAL    &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&kp SLASH      &kp GRAVE  &kp NUMBER_1  &kp N2   &kp N3  &kp BSLH     &none  &none      &none      &none     &none     &none
                                        &kp DOT  &kp N0  &kp MINUS    &none  &none      &none
            >;
        };

        Sym {
            bindings = <
&kp BACKSPACE  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK      &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none  &none      &none      &none     &none     &none
&kp LESS_THAN  &kp COLON       &kp DOLLAR       &kp PERCENT       &kp CARET              &kp PLUS           &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&kp QUESTION   &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN       &kp HASH               &kp PIPE           &none  &none      &none      &none     &none     &none
                                                &kp GREATER_THAN  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &none  &none      &none
            >;
        };

        Fun {
            bindings = <
&none  &kp F12  &kp F7  &kp F8     &kp F9     &kp PRINTSCREEN    &none  &none      &none      &none     &none     &none
&none  &kp F11  &kp F4  &kp F5     &kp F6     &kp SCROLLLOCK     &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&none  &kp F10  &kp F1  &kp F2     &kp F3     &kp PAUSE_BREAK    &none  &none      &none      &none     &none     &none
                        &kp K_APP  &kp SPACE  &kp ENTER          &none  &none      &none
            >;
        };
    };
};
